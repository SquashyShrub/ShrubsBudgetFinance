@using ShrubsBudgetFinance.Services
@using ShrubsBudgetFinance.Models
@using ShrubsBudgetFinance.Data
@using ShrubsBudgetFinance.Controllers

@page "/config/monthlyexpenses"

@inject FixedMonthlyCostsService fixedCosts

@* @layout NavigationLayout*@
<head>
    <title>Fixed Expenses</title>
    <style>
        body {
        font-family: Consolas;
        margin: 10px;
        }

        table {
        width: 60%;
        border-collapse: collapse;
        margin-bottom: 10px;
        }

        td {
        border: 1px solid grey;
        padding-left: 10px;
        padding-right: 10px;
        }

        th {
        background-color: lightgrey;
        font-size: 24px;
        padding: 10px;
        border: 1px solid grey;
        text-align: center;
        }

        input {
        margin-top: 4px;
        margin-bottom: 4px;
        width: 100%;
        padding: 2px;
        box-sizing: border-box;
        }
    </style>
</head>

<body>
    <h1>Monthly Expenses</h1>
    <p>Add your monthly expenses below:</p>
    <table id="monthlyExpensesTable">
        <thead>
            <tr>
                <th class="col-6">Budget Category</th>
                <th class="col-4">Amount</th>
                <th class="col-2">% of Net</th>
            </tr>
        </thead>
        <tbody>
            @* Annual Budget Monthly Contribution *@
            <tr>
                <td>Annual Budget Monthly Contribution</td>
                <td>annual total/12</td>
                <td>total amount/net total income</td>
            </tr>

            @* Active Investment Monthly Contribution *@
            <tr>
                <td>Active Investment Monthly Contribution</td>
                <td><input type="number" @bind="activeContribution" /></td>
                <td>total amount/net total income</td>
            </tr>

            @* Housing *@
            <tr>
                <td>Housing</td>
                <td>
                    <button class="accordion" @onclick="ToggleHousing">
                        Housing Total: @totalHousing
                    </button>
                    <div class="panel @(livingOpen ? "open" : "")">
                        <input type="number" id="mortRent" placeholder="Mortage/Rent" @bind="mortRent" />
                        <input type="number" id="homeInsurance" placeholder="Renters/Home Insurance" @bind="homeInsurance" />
                        <input type="number" id="hoaFees" placeholder="HOA Fees" @bind="hoaFees" />
                        <input type="number" id="electricity" placeholder="Total Electricity Bill" @bind="electricity" />
                        <input type="number" id="gas" placeholder="Gas Bill" @bind="gas" />
                        <input type="number" id="water" placeholder="Water Bill" @bind="water" />
                        <input type="number" id="wasteRemoval" placeholder="Waste Removal Fee" @bind="wasteRemoval" />
                        <input type="number" id="phoneBill" placeholder="Phone Bill" @bind="phoneBill" />
                    </div>
                </td>
                <td> total amount/net total income</td>
            </tr>

            @* Vehicle Cost *@
            <tr>
                <td>Car #1 Total</td>
                <td>
                    <button class="accordion" @onclick="ToggleCarOne">
                        Car #1 Total: @CarTotalOne
                    </button>
                    <div class="panel @(carOneOpen ? "open" : "")">
                        <input type="number" id="monthlyPaymentTextOne" placeholder="Monthly Payment" @bind="MonthlyPaymentOne" />
                        <input type="number" id="insuranceTextOne" placeholder="Insurance Cost" @bind="InsuranceCostOne" />
                    </div>
                </td>
                <td> total amount/net total income</td>
            </tr>
            <tr>
                <td>Car #2 Total</td>
                <td>
                    <button class="accordion" @onclick="ToggleCarTwo">
                        Car #2 Total: @CarTotalTwo
                    </button>
                    <div class="panel @(carTwoOpen ? "open" : "")">
                        <input type="number" id="monthlyPaymentTextTwo" placeholder="Monthly Payment" @bind="MonthlyPaymentTwo" />
                        <input type="number" id="insuranceTextTwo" placeholder="Insurance Cost" @bind="InsuranceCostTwo" />
                    </div>
                </td>
                <td> total amount/net total income</td>
            </tr>
            <tr>
                <td>Car #3 Total</td>
                <td>
                    <button class="accordion" @onclick="ToggleCarThree">
                        Car #3 Total: @CarTotalThree
                    </button>
                    <div class="panel @(carThreeOpen ? "open" : "")">
                        <input type="number" id="monthlyPaymentTextThree" placeholder="Monthly Payment" @bind="MonthlyPaymentThree" />
                        <input type="number" id="insuranceTextThree" placeholder="Insurance Cost" @bind="InsuranceCostThree" />
                    </div>
                </td>
                <td> total amount/net total income</td>
            </tr>

            @*Loan Repayments*@
            <tr>
                <td>Loan/Debt #1</td>
                <td><input type="number" @bind="debtOne"/></td>
                <td>total amount/net total income</td>
            </tr>
            <tr>
                <td>Loan/Debt #2</td>
                <td><input type="number" @bind="debtTwo"/></td>
                <td>total amount/net total income</td>
            </tr>
            <tr>
                <td>Loan/Debt #3</td>
                <td><input type="number" @bind="debtThree"/></td>
                <td>total amount/net total income</td>
            </tr>

            @* Subscriptions *@
            <tr>
                <td>Subscriptions/Memberships Total</td>
                <td>
                    <button class="accordion" @onclick="ToggleSubscriptions">
                        Subscriptions Total: @totalSubs
                    </button>
                    <div class="panel @(isSubOpen ? "open" : "")">
                        <input type="number" id="subOne" placeholder="Streaming Subscriptions" @bind="streamingSubscriptions" />
                        <input type="number" id="subTwo" placeholder="Gym Memberships" @bind="gymMemberships" />
                        <input type="number" id="subThree" placeholder="Music Subscriptions" @bind="musicSubscriptions" />
                        <input type="number" id="subFour" placeholder="Shopping Subscriptions" @bind="shoppingSubscriptions" />
                        <input type="number" id="subFive" placeholder="tvSubscriptions" @bind="tvSubscriptions" />
                        <input type="number" id="subSix" placeholder="Other Subscriptions" @bind="otherSubscriptions" />
                    </div>
                </td>
                <td> total amount/net total income</td>
            </tr>

            @* Billing Account Extra Contribution (Acts as emergency savings) *@
            <tr>
                <td>Billing Account Monthly Contribution</td>
                <td><input type="number" @bind="billingAccountContribution"/></td>
                <td>total amount/net total income</td>
            </tr>

            @* Savings Contribution *@
            <tr>
                <td>Savings Monthly Contribution</td>
                <td><input type="number" @bind="savingsContribution"/></td>
                <td>total amount/net total income</td>
            </tr>

            @* Other ( 5 extra slots) - ex: Credit Card monthly pay offs would go here *@
            <tr>
                <td>Other Total: </td>
                <td>
                    <button class="accordion" @onclick="ToggleOther">
                        Other Total: @totalOther
                    </button>
                    <div class="panel @(otherOpen ? "open" : "")">
                        <input type="number" id="otherOne" placeholder="Other #1" @bind="otherOne" />
                        <input type="number" id="otherTwo" placeholder="Other #2" @bind="otherTwo" />
                        <input type="number" id="otherThree" placeholder="Other #3" @bind="otherThree" />
                        <input type="number" id="otherFour" placeholder="Other #4" @bind="otherFour" />
                        <input type="number" id="otherFive" placeholder="Other #5" @bind="otherFive" />
                    </div>
                </td>
                <td> total amount/net total income</td>
            </tr>

            @* Total *@
            <tr>
                <td>Amount Left for Monthly Budget: </td>
                <td class="fst-italic">@remaining</td>
                <td>@thePercentage</td>
            </tr>
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="SaveData">Save Data</button>
</body>


@code {
    //Variables
    static ConfigContext config = new ConfigContext();
    static FixedCostController fixedCostController = new FixedCostController(config);

    #region Annual Budget

    #endregion Annual Budget

    #region Active Investment Contr
    private decimal activeContribution;
    private decimal activeContributionPercent;
    #endregion Active investment Contr

    #region Housing
    private bool livingOpen = false;
    private decimal totalHousing => mortRent + homeInsurance + hoaFees + electricity + gas + water + wasteRemoval + phoneBill;
    private decimal mortRent;
    private decimal homeInsurance;
    private decimal hoaFees;
    private decimal electricity;
    private decimal gas;
    private decimal water;
    private decimal wasteRemoval;
    private decimal phoneBill;

    private void ToggleHousing()
    {
        livingOpen = !livingOpen;
    }
    #endregion Housing

    #region Car
    private bool carOneOpen = false;
    private bool carTwoOpen = false;
    private bool carThreeOpen = false;

    private decimal CarTotalOne => MonthlyPaymentOne + InsuranceCostOne;
    private decimal CatTotalOnePercent;
    private decimal CarTotalTwo => MonthlyPaymentTwo + InsuranceCostTwo;
    private decimal CarTotalTwoPercent;
    private decimal CarTotalThree => MonthlyPaymentThree + InsuranceCostThree;
    private decimal CarTotalThreePercent;

    private decimal MonthlyPaymentOne;
    private decimal InsuranceCostOne;
    private decimal MonthlyPaymentTwo;
    private decimal InsuranceCostTwo;
    private decimal MonthlyPaymentThree;
    private decimal InsuranceCostThree;

    private void ToggleCarOne()
    {
        carOneOpen = !carOneOpen;
    }
    private void ToggleCarTwo()
    {
        carTwoOpen = !carTwoOpen;
    }
    private void ToggleCarThree()
    {
        carThreeOpen = !carThreeOpen;
    }
    #endregion Car

    #region Loan
    private decimal debtOne;
    private decimal debtOnePercent;
    private decimal debtTwo;
    private decimal debtTwoPercent;
    private decimal debtThree;
    private decimal debtThreePercent;
    #endregion Loan

    #region Subscriptions
    private bool isSubOpen = false;

    private decimal totalSubs => streamingSubscriptions + gymMemberships + musicSubscriptions + shoppingSubscriptions + tvSubscriptions + otherSubscriptions;
    private decimal totalSubsPercent;
    private decimal streamingSubscriptions;
    private decimal gymMemberships;
    private decimal musicSubscriptions;
    private decimal shoppingSubscriptions;
    private decimal tvSubscriptions;
    private decimal otherSubscriptions;

    private void ToggleSubscriptions() 
    {
        isSubOpen = !isSubOpen;
    }

    #endregion Subscriptions

    private decimal billingAccountContribution;
    private decimal billingAccountContributionPercent;
    private decimal savingsContribution;
    private decimal savingsContributionPercent;

    #region Other
    private bool otherOpen = false;
    private decimal totalOther => otherOne + otherTwo + otherThree + otherFour + otherFive;
    private decimal totalOtherPercent;
    private decimal otherOne;
    private decimal otherTwo;
    private decimal otherThree;
    private decimal otherFour;
    private decimal otherFive;

    private void ToggleOther()
    {
        otherOpen = !otherOpen;
    }
    #endregion Other

    private decimal grandTotal => activeContribution + totalHousing + CarTotalOne + CarTotalTwo + CarTotalThree + debtOne + debtTwo + debtThree + totalSubs + billingAccountContribution + savingsContribution + totalOther;
    private decimal remaining; //net income total - grand total
    private decimal thePercentage;

    private void SaveData()
    {
        var fixedCostToUpdate = fixedCostController.FindOne(2);
        fixedCostToUpdate.Amount = activeContribution;
        fixedCosts.UpdateFixedCost(2, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(3);
        fixedCostToUpdate.Amount = totalHousing;
        fixedCosts.UpdateFixedCost(3, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(4);
        fixedCostToUpdate.Amount = mortRent;
        fixedCosts.UpdateFixedCost(4, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(5);
        fixedCostToUpdate.Amount = homeInsurance;
        fixedCosts.UpdateFixedCost(5, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(6);
        fixedCostToUpdate.Amount = hoaFees;
        fixedCosts.UpdateFixedCost(6, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(7);
        fixedCostToUpdate.Amount = electricity;
        fixedCosts.UpdateFixedCost(7, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(8);
        fixedCostToUpdate.Amount = gas;
        fixedCosts.UpdateFixedCost(8, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(9);
        fixedCostToUpdate.Amount = water;
        fixedCosts.UpdateFixedCost(9, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(10);
        fixedCostToUpdate.Amount = wasteRemoval;
        fixedCosts.UpdateFixedCost(10, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(11);
        fixedCostToUpdate.Amount = phoneBill;
        fixedCosts.UpdateFixedCost(11, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(12);
        fixedCostToUpdate.Amount =CarTotalOne;
        fixedCosts.UpdateFixedCost(12, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(13);
        fixedCostToUpdate.Amount = MonthlyPaymentOne;
        fixedCosts.UpdateFixedCost(13, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(14);
        fixedCostToUpdate.Amount = InsuranceCostOne;
        fixedCosts.UpdateFixedCost(14, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(15);
        fixedCostToUpdate.Amount = CarTotalTwo;
        fixedCosts.UpdateFixedCost(15, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(16);
        fixedCostToUpdate.Amount = MonthlyPaymentTwo;
        fixedCosts.UpdateFixedCost(16, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(17);
        fixedCostToUpdate.Amount = InsuranceCostTwo;
        fixedCosts.UpdateFixedCost(17, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(18);
        fixedCostToUpdate.Amount = CarTotalThree;
        fixedCosts.UpdateFixedCost(18, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(19);
        fixedCostToUpdate.Amount = MonthlyPaymentThree;
        fixedCosts.UpdateFixedCost(19, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(20);
        fixedCostToUpdate.Amount = InsuranceCostThree;
        fixedCosts.UpdateFixedCost(20, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(21);
        fixedCostToUpdate.Amount = debtOne;
        fixedCosts.UpdateFixedCost(21, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(22);
        fixedCostToUpdate.Amount = debtTwo;
        fixedCosts.UpdateFixedCost(22, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(23);
        fixedCostToUpdate.Amount = debtThree;
        fixedCosts.UpdateFixedCost(23, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(24);
        fixedCostToUpdate.Amount = streamingSubscriptions;
        fixedCosts.UpdateFixedCost(24, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(25);
        fixedCostToUpdate.Amount = gymMemberships;
        fixedCosts.UpdateFixedCost(25, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(26);
        fixedCostToUpdate.Amount = musicSubscriptions;
        fixedCosts.UpdateFixedCost(26, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(27);
		fixedCostToUpdate.Amount = shoppingSubscriptions;
        fixedCosts.UpdateFixedCost(27, fixedCostToUpdate);

        fixedCostToUpdate = fixedCostController.FindOne(28);
        fixedCostToUpdate.Amount = tvSubscriptions;
		fixedCosts.UpdateFixedCost(28, fixedCostToUpdate);

		fixedCostToUpdate = fixedCostController.FindOne(29);
		fixedCostToUpdate.Amount = otherSubscriptions;
		fixedCosts.UpdateFixedCost(29, fixedCostToUpdate);

		fixedCostToUpdate = fixedCostController.FindOne(30);
		fixedCostToUpdate.Amount = billingAccountContribution;
		fixedCosts.UpdateFixedCost(30, fixedCostToUpdate);

		fixedCostToUpdate = fixedCostController.FindOne(31);
		fixedCostToUpdate.Amount = savingsContribution;
		fixedCosts.UpdateFixedCost(31, fixedCostToUpdate);

		fixedCostToUpdate = fixedCostController.FindOne(32);
		fixedCostToUpdate.Amount = otherOne;

		fixedCosts.UpdateFixedCost(32, fixedCostToUpdate);
		fixedCostToUpdate = fixedCostController.FindOne(33);
		fixedCostToUpdate.Amount = otherTwo;

		fixedCosts.UpdateFixedCost(33, fixedCostToUpdate);
		fixedCostToUpdate = fixedCostController.FindOne(34);
		fixedCostToUpdate.Amount = otherThree;

		fixedCosts.UpdateFixedCost(34, fixedCostToUpdate);
		fixedCostToUpdate = fixedCostController.FindOne(35);
		fixedCostToUpdate.Amount = otherFour;
		fixedCosts.UpdateFixedCost(35, fixedCostToUpdate);

		fixedCostToUpdate = fixedCostController.FindOne(36);
		fixedCostToUpdate.Amount = otherFive;
		fixedCosts.UpdateFixedCost(36, fixedCostToUpdate);

    }
}
